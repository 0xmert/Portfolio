function maskCloudAndShadows(image) {
    var cloudProb = image.select('MSK_CLDPRB');
    var snowProb = image.select('MSK_SNWPRB');
    var cloud = cloudProb.lt(5);
    var snow = snowProb.lt(5);
    var scl = image.select('SCL'); 
    var shadow = scl.eq(3); // 3 = cloud shadow
    var cirrus = scl.eq(10); // 10 = cirrus
    var cloudBitMask = 1 << 10;
    var cirrusBitMask = 1 << 11;
    var qa = image.select('QA60');
    // Cloud probability less than 5% or cloud shadow classification
    var mask = (cloud.and(snow)).and(cirrus.neq(1)).and(shadow.neq(1)).and(qa.bitwiseAnd(cloudBitMask).eq(0)
        .and(qa.bitwiseAnd(cirrusBitMask).eq(0)));
    return image.updateMask(mask);
  }
  var startDate = '2020-08-01'
  var endDate = '2022-08-01'
  
  
  var polygon = ee.Feature(dusaf.first())
  print(polygon)
  //var testPoint = ee.Feature(bigfield.first())
  // Change this object's coordinates based on the interested region
  var polygon = ee.Geometry.Polygon([[[10.192910994618561,45.79223714064632],[10.192917378314064,45.79223707860123],[10.192917306199087,45.7922325534842],[10.192917170905483,45.79222810713549],[10.192923554599941,45.792228045090035],[10.192923507954117,45.79222359077528],[10.192929756353074,45.79221908238162],[10.192929684236312,45.79221455726638],[10.192936067929537,45.79221449522018],[10.192935932633363,45.792210048873244],[10.19294231632639,45.79220998682666],[10.192948700020043,45.792209924779655],[10.192948653370802,45.79220547046669],[10.192955037064255,45.792205408419285],[10.19296142075834,45.79220534637148],[10.19296125998869,45.792200829224186],[10.19297411602568,45.79220069716083],[10.19308256679133,45.79219511715753],[10.193108283603506,45.79220376958725],[10.193153151580658,45.79221223583155],[10.193172484732964,45.792220950307275],[10.193198362423859,45.79223411986614],[10.193224126024797,45.79224722658685],[10.193243666728907,45.79226491252272],[10.193270116064927,45.79230485489373],[10.193289838870083,45.792331441520275],[10.193296612161708,45.79234925161514],[10.193303957039682,45.79239383458594],[10.19330446543976,45.792420686239375],[10.193310849208405,45.79242062416756],[10.193310984551863,45.79242507053281],[10.193311031245683,45.79242952486537],[10.193311166589096,45.79243397123146],[10.193317550360854,45.79243390915912],[10.193317597055438,45.79243836349251],[10.19331775787077,45.79244288066098],[10.193324141644823,45.792442818588185],[10.193324188340172,45.79244727292239],[10.193330572115675,45.79244721084914],[10.19333070746151,45.7924516572168],[10.193337137935403,45.7924560494781],[10.193343610363536,45.79245597943702],[10.193343657061275,45.792460433772405],[10.193350295057591,45.79247379754108],[10.193350684621942,45.792491669759514],[10.193350819970082,45.792496116131296],[10.19335086666836,45.792500570470445],[10.193351027487699,45.792505087644734],[10.193351074185921,45.792509541984735],[10.193351209533985,45.792513988358195],[10.193351256232143,45.792518442699034],[10.193351391580164,45.79252288907333],[10.19334503325991,45.79252302195003],[10.193345079957187,45.79252747629173],[10.193345215304342,45.79253192266692],[10.19333883151181,45.79253198474157],[10.193338878208206,45.79253643908415],[10.193313732584148,45.792554559621486],[10.193275637329329,45.792563903576635],[10.193243583044683,45.7925597675451],[10.193192195430946,45.79254691697749],[10.19317938119591,45.792542586762394],[10.193134123323654,45.79251624824224],[10.193133988003833,45.79251180186768],[10.19312760423616,45.79251186392838],[10.193127557566749,45.79250740958745],[10.193121173800527,45.792507471647724],[10.193121038482326,45.79250302527393],[10.193114654717562,45.792503087333735],[10.193114582579076,45.792498562191874],[10.193114447261673,45.7924941158189],[10.193108063499201,45.79249417787823],[10.193108016832145,45.79248972353891],[10.193107881515532,45.79248527716673],[10.193107809377775,45.79248075202655],[10.193101290302607,45.79247636771402],[10.193101108320397,45.79246746700584],[10.193101061653977,45.792463012669025],[10.193094470447258,45.79245410321993],[10.193094335132157,45.79244965685106],[10.193087769400671,45.792440818205606],[10.193087697265156,45.79243629306961],[10.193081131538287,45.79242745442612],[10.19308099622474,45.792423008059714],[10.193074405031982,45.792414098616554],[10.193074358368499,45.7924096442847],[10.1930678393136,45.79240525997618],[10.193061273599053,45.79239642133694],[10.19306120146662,45.79239189620512],[10.192977578412455,45.792366008783446],[10.192977506290736,45.792361483654254],[10.19297114803659,45.792361616505495],[10.192964603543727,45.792357161392516],[10.192958173172373,45.79235276911447],[10.19295803787429,45.7923483227546],[10.192951654154278,45.79234838480293],[10.192951607505975,45.79234393047688],[10.192945223787413,45.79234399252478],[10.192945088490953,45.79233954616567],[10.192945016373258,45.792335021038916],[10.192938497361327,45.79233063672803],[10.19293845071455,45.79232618240362],[10.192938315418848,45.792321736046176],[10.19293188505968,45.79231734376949],[10.192931724294661,45.79231282661134],[10.19293167764859,45.79230837228859],[10.192925158644437,45.79230398797917],[10.192925111999127,45.79229953365723],[10.192924976704973,45.79229508730224],[10.19292490458952,45.79229056217967],[10.192924769295328,45.792286115825526],[10.19291833894547,45.79228172355109],[10.192918203652068,45.79227727719775],[10.192918131537343,45.79227275207686],[10.192917996243912,45.79226830572437],[10.192917814305707,45.79225940505413],[10.192911430606062,45.79225946709937],[10.192911383962098,45.7922550127816],[10.19291122319939,45.792250495629325],[10.192911176555366,45.7922460413124],[10.192911041262647,45.792241594962405],[10.192910994618561,45.79223714064632]]])
  //var polygon = ee.Geometry.MultiPolygon();
  // Apply the coordinates method to the Polygon object.
  //var polygonCoordinates = polygon.coordinates();
  // var polygonCoordinates = polygon.geometry().bounds()
  // Add EOM Band
  function addEOM(image) {
    var EOM = image.normalizedDifference(['B12', 'B4']).rename('EOM')
    return image.addBands([EOM])
  }
  // Print the result to the console.
  //print('polygon.coordinates(...) =', polygonCoordinates);
  
  // Load the sentinel collection, apply cloud functions, and the polygon area.
  var collection = ee.ImageCollection('COPERNICUS/S2_SR')
      .filterDate(startDate, endDate)
      .map(addEOM)
      .map(maskCloudAndShadows)
      .filter(ee.Filter.bounds(polygon))
   
  // get the time series analysis of the area
  var chart = ui.Chart.image.series({
      imageCollection: collection.select('EOM'),
      region: polygon.bounds()
      }).setOptions({
        interpolateNulls: false,
        lineWidth: 1,
        pointSize: 3,
        title: 'EOM2 over Time at a Single Location',
        vAxis: {title: 'EOM2'},
        hAxis: {title: 'Date', format: 'YYYY-MMM', gridlines: {count: 10}}
  
      })
  
  
  print("Time Series Chart", chart)
  
  // Print list of Collection Images
  print(collection)
  // Put all the dates of images in a list
  var allDates = ee.List(collection.aggregate_array('system:index'));
  // Print all the dates
  print(allDates)
  // Display relevant geometries on the map.
  // Change this coordinates based on your polygon coordinates
  Map.setCenter(10.192910994618561,45.79223714064632);
  
  var vizParams = {
    'bands': ['B4', 'B3', 'B2'],
    'min': 100,
    'max': 3000,
    'gamma': [0.95, 1.1, 1]
  }
  
  
  //var evi2weekList= collection.toList(999);
  // var evi2week2ndImage=ee.Image(ee.List(evi2weekList).get(1)); //note index 0 is the first image
  //print('2ndImage from evi2week imColl',evi2week2ndImage)
  
  print(ee.Image('COPERNICUS/S2_SR/20220605T101559_20220605T102306_T32TMR'))
  
  var image_1 = ee.Image('COPERNICUS/S2_SR/20210309T100739_20210309T101254_T32TNR')
  var image_2 = ee.Image('COPERNICUS/S2_SR/20210312T101729_20210312T102146_T32TNR')
  var image_3 = ee.Image('COPERNICUS/S2_SR/20210314T101021_20210314T101230_T32TNR')
  // Add First Date
  Map.addLayer(image_1, vizParams, 'false color composite')  
  // Add Second Date
  
  Map.addLayer(image_2, vizParams, 'false color composite')  
  // Add Third Date
  
  Map.addLayer(image_3, vizParams, 'false color composite')  
  // Draw POLYGON
  Map.addLayer(polygon,
               {'color': 'red'},
               'Geometry [red]: polygon');
               
           
  
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
    